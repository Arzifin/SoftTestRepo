{
  "stats": {
    "suites": 10,
    "tests": 58,
    "passes": 51,
    "pending": 0,
    "failures": 7,
    "start": "2021-12-05T14:58:21.332Z",
    "end": "2021-12-05T14:58:21.378Z",
    "duration": 46,
    "testsRegistered": 58,
    "passPercent": 87.93103448275862,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "20a8a2db-1330-4f97-b136-7d680db38ff6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8589cfee-5a59-4b1d-9df8-76eeeada4089",
          "title": "camelCase unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/camelCase.test.js",
          "file": "/test/camelCase.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Foo Bar should return fooBar",
              "fullTitle": "camelCase unit tests Foo Bar should return fooBar",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase('Foo Bar');\nexpect(result).to.equal('fooBar');",
              "err": {
                "message": "AssertionError: expected ' fooBar' to equal 'fooBar'",
                "estack": "AssertionError: expected ' fooBar' to equal 'fooBar'\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/camelCase.test.js:9:27)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": "-  fooBar\n+ fooBar\n"
              },
              "uuid": "dbd14eb7-810a-46f8-8fd0-3d1c3185fb6c",
              "parentUUID": "8589cfee-5a59-4b1d-9df8-76eeeada4089",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "--foo-bar-- should return fooBar",
              "fullTitle": "camelCase unit tests --foo-bar-- should return fooBar",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase('--foo-bar--');\nexpect(result).to.equal('fooBar');",
              "err": {
                "message": "AssertionError: expected ' fooBar' to equal 'fooBar'",
                "estack": "AssertionError: expected ' fooBar' to equal 'fooBar'\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/camelCase.test.js:14:27)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": "-  fooBar\n+ fooBar\n"
              },
              "uuid": "71f2e2cd-94c9-4cc5-80d8-b9f7a9c6a77f",
              "parentUUID": "8589cfee-5a59-4b1d-9df8-76eeeada4089",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "__FOO_BAR__ should return fooBar",
              "fullTitle": "camelCase unit tests __FOO_BAR__ should return fooBar",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase('__FOO_BAR__');\nexpect(result).to.equal('fooBar');",
              "err": {
                "message": "AssertionError: expected ' fooBar' to equal 'fooBar'",
                "estack": "AssertionError: expected ' fooBar' to equal 'fooBar'\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/camelCase.test.js:19:27)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": "-  fooBar\n+ fooBar\n"
              },
              "uuid": "5b33fa96-0b96-4c06-b171-62228c6d4f99",
              "parentUUID": "8589cfee-5a59-4b1d-9df8-76eeeada4089",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "a should return a",
              "fullTitle": "camelCase unit tests a should return a",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase('a');\nexpect(result).to.equal('a');",
              "err": {
                "message": "AssertionError: expected ' a' to equal 'a'",
                "estack": "AssertionError: expected ' a' to equal 'a'\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/camelCase.test.js:24:27)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": "-  a\n+ a\n"
              },
              "uuid": "c17a9fcb-a1a0-446c-87a5-a3d913993b9a",
              "parentUUID": "8589cfee-5a59-4b1d-9df8-76eeeada4089",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "a.b.c should return aBC",
              "fullTitle": "camelCase unit tests a.b.c should return aBC",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase('a.b.c');\nexpect(result).to.equal('aBC');",
              "err": {
                "message": "AssertionError: expected ' aBC' to equal 'aBC'",
                "estack": "AssertionError: expected ' aBC' to equal 'aBC'\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/camelCase.test.js:29:27)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": "-  aBC\n+ aBC\n"
              },
              "uuid": "88d51764-d4a7-4239-a66d-3702398e695e",
              "parentUUID": "8589cfee-5a59-4b1d-9df8-76eeeada4089",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "abc abc abc should return abcAbcAbc",
              "fullTitle": "camelCase unit tests abc abc abc should return abcAbcAbc",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase('abc abc abc abc');\nexpect(result).to.equal('abcAbcAbcAbc');",
              "err": {
                "message": "AssertionError: expected ' abcAbcAbcAbc' to equal 'abcAbcAbcAbc'",
                "estack": "AssertionError: expected ' abcAbcAbcAbc' to equal 'abcAbcAbcAbc'\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/camelCase.test.js:34:27)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": "-  abcAbcAbcAbc\n+ abcAbcAbcAbc\n"
              },
              "uuid": "968c7f3a-8803-4235-ba89-ac4e6c9b5605",
              "parentUUID": "8589cfee-5a59-4b1d-9df8-76eeeada4089",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dbd14eb7-810a-46f8-8fd0-3d1c3185fb6c",
            "71f2e2cd-94c9-4cc5-80d8-b9f7a9c6a77f",
            "5b33fa96-0b96-4c06-b171-62228c6d4f99",
            "c17a9fcb-a1a0-446c-87a5-a3d913993b9a",
            "88d51764-d4a7-4239-a66d-3702398e695e",
            "968c7f3a-8803-4235-ba89-ac4e6c9b5605"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c8f55d6f-99c6-4f55-8fe2-a90ca8b71c82",
          "title": "defaultTo unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/defaultTo.test.js",
          "file": "/test/defaultTo.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "1, NaN should return 1",
              "fullTitle": "defaultTo unit tests 1, NaN should return 1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = defaultTo(1, NaN);\nexpect(result).to.equal(1);",
              "err": {},
              "uuid": "b542da5d-bbc5-491f-939b-e119071fc1d7",
              "parentUUID": "c8f55d6f-99c6-4f55-8fe2-a90ca8b71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "1, null  should return 1",
              "fullTitle": "defaultTo unit tests 1, null  should return 1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = defaultTo(1, null);\nexpect(result).to.equal(1, null);",
              "err": {},
              "uuid": "9bba002d-df6d-46c1-ae46-fdebd3d1b234",
              "parentUUID": "c8f55d6f-99c6-4f55-8fe2-a90ca8b71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "1, undefined should return 1",
              "fullTitle": "defaultTo unit tests 1, undefined should return 1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = defaultTo(1, undefined);\nexpect(result).to.equal(1);",
              "err": {},
              "uuid": "aa005fb0-b9c9-4fb1-a971-3e1ae276fb6f",
              "parentUUID": "c8f55d6f-99c6-4f55-8fe2-a90ca8b71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "NaN, 2 should return 2",
              "fullTitle": "defaultTo unit tests NaN, 2 should return 2",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = defaultTo(NaN, 2);\nexpect(result).to.equal(2);",
              "err": {
                "message": "AssertionError: expected NaN to equal 2",
                "estack": "AssertionError: expected NaN to equal 2\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/defaultTo.test.js:24:27)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": "- NaN\n+ 2\n"
              },
              "uuid": "be4d21b3-f4e6-47c5-91f6-19ce3880f2f1",
              "parentUUID": "c8f55d6f-99c6-4f55-8fe2-a90ca8b71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null, 2  should return 2",
              "fullTitle": "defaultTo unit tests null, 2  should return 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = defaultTo(null, 2);\nexpect(result).to.equal(2);",
              "err": {},
              "uuid": "28d9bfe8-e6c6-496f-b6d2-17c8255e8df5",
              "parentUUID": "c8f55d6f-99c6-4f55-8fe2-a90ca8b71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "undefined, 2 should return 2",
              "fullTitle": "defaultTo unit tests undefined, 2 should return 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = defaultTo(undefined, 2);\nexpect(result).to.equal(2);",
              "err": {},
              "uuid": "e066d6ad-035c-4552-885c-d10215328811",
              "parentUUID": "c8f55d6f-99c6-4f55-8fe2-a90ca8b71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "2, 3 should return 2",
              "fullTitle": "defaultTo unit tests 2, 3 should return 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = defaultTo(2);\nexpect(result).to.equal(2);",
              "err": {},
              "uuid": "67f0fdfc-f020-41d1-84a6-faddcc694b36",
              "parentUUID": "c8f55d6f-99c6-4f55-8fe2-a90ca8b71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "abc, 1 should return abc",
              "fullTitle": "defaultTo unit tests abc, 1 should return abc",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = defaultTo('abc', 1);\nexpect(result).to.equal('abc');",
              "err": {},
              "uuid": "01e06dad-da85-4b32-9f4b-7001ff0f88f4",
              "parentUUID": "c8f55d6f-99c6-4f55-8fe2-a90ca8b71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "-1, 1 should return -1",
              "fullTitle": "defaultTo unit tests -1, 1 should return -1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = defaultTo(-1, 1);\nexpect(result).to.equal(-1);",
              "err": {},
              "uuid": "9fbf9273-69bb-4893-a2a3-5186890d1d9d",
              "parentUUID": "c8f55d6f-99c6-4f55-8fe2-a90ca8b71c82",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b542da5d-bbc5-491f-939b-e119071fc1d7",
            "9bba002d-df6d-46c1-ae46-fdebd3d1b234",
            "aa005fb0-b9c9-4fb1-a971-3e1ae276fb6f",
            "28d9bfe8-e6c6-496f-b6d2-17c8255e8df5",
            "e066d6ad-035c-4552-885c-d10215328811",
            "67f0fdfc-f020-41d1-84a6-faddcc694b36",
            "01e06dad-da85-4b32-9f4b-7001ff0f88f4",
            "9fbf9273-69bb-4893-a2a3-5186890d1d9d"
          ],
          "failures": [
            "be4d21b3-f4e6-47c5-91f6-19ce3880f2f1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f04a8fe0-66f2-4d6b-90e1-630232b2e8e5",
          "title": "drop unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/drop.test.js",
          "file": "/test/drop.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[1, 2, 3] should return [2, 3]",
              "fullTitle": "drop unit tests [1, 2, 3] should return [2, 3]",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = drop([1, 2, 3]);\nexpect(result).to.have.ordered.members([2, 3]);",
              "err": {},
              "uuid": "f20b8aaa-ffa2-43fc-b8a5-dab3f93fc2e8",
              "parentUUID": "f04a8fe0-66f2-4d6b-90e1-630232b2e8e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[1, 2, 3], 2 should return [3]",
              "fullTitle": "drop unit tests [1, 2, 3], 2 should return [3]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = drop([1, 2, 3], 2);\nexpect(result).to.have.ordered.members([3]);",
              "err": {},
              "uuid": "07416cdb-b999-458f-9c3c-5264ac9ee674",
              "parentUUID": "f04a8fe0-66f2-4d6b-90e1-630232b2e8e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[1, 2, 3], 5 should return []",
              "fullTitle": "drop unit tests [1, 2, 3], 5 should return []",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = drop([1, 2, 3], 5);\nexpect(result).to.have.ordered.members([]);",
              "err": {},
              "uuid": "ea2c4e84-05e5-4d9f-86eb-b6e9551fa971",
              "parentUUID": "f04a8fe0-66f2-4d6b-90e1-630232b2e8e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[1, 2, 3], 0 should return [1, 2, 3]",
              "fullTitle": "drop unit tests [1, 2, 3], 0 should return [1, 2, 3]",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = drop([1, 2, 3], 0);\nexpect(result).to.have.ordered.members([1, 2, 3]);",
              "err": {},
              "uuid": "f6468719-bd4b-495c-a7ce-4db5876e826f",
              "parentUUID": "f04a8fe0-66f2-4d6b-90e1-630232b2e8e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[1, 2, 3], -1 should return [1, 2, 3]",
              "fullTitle": "drop unit tests [1, 2, 3], -1 should return [1, 2, 3]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = drop([1, 2, 3], -1);\nexpect(result).to.have.ordered.members([1, 2, 3]);",
              "err": {},
              "uuid": "3706f353-d64e-4c7f-a94f-6116c55fe219",
              "parentUUID": "f04a8fe0-66f2-4d6b-90e1-630232b2e8e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[1, 2, 3], 100000000000 should return []",
              "fullTitle": "drop unit tests [1, 2, 3], 100000000000 should return []",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = drop([1, 2, 3], 100000000000);\nexpect(result).to.have.ordered.members([]);",
              "err": {},
              "uuid": "297baef7-4489-4d3f-a7f3-4bef0254a0f4",
              "parentUUID": "f04a8fe0-66f2-4d6b-90e1-630232b2e8e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[1, 2, 3], null should return [1, 2, 3]",
              "fullTitle": "drop unit tests [1, 2, 3], null should return [1, 2, 3]",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = drop([1, 2, 3], null);\nexpect(result).to.have.ordered.members([1, 2, 3]);",
              "err": {},
              "uuid": "dd7abee5-6ab8-4185-ba78-93658a7a3e81",
              "parentUUID": "f04a8fe0-66f2-4d6b-90e1-630232b2e8e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f20b8aaa-ffa2-43fc-b8a5-dab3f93fc2e8",
            "07416cdb-b999-458f-9c3c-5264ac9ee674",
            "ea2c4e84-05e5-4d9f-86eb-b6e9551fa971",
            "f6468719-bd4b-495c-a7ce-4db5876e826f",
            "3706f353-d64e-4c7f-a94f-6116c55fe219",
            "297baef7-4489-4d3f-a7f3-4bef0254a0f4",
            "dd7abee5-6ab8-4185-ba78-93658a7a3e81"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "af530a6d-5da1-4668-aaa8-7b0afe4fd852",
          "title": "isArrayLike unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/isArrayLike.test.js",
          "file": "/test/isArrayLike.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "empty list should return true",
              "fullTitle": "isArrayLike unit tests empty list should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isArrayLike([]);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "37344833-086f-4532-a0ea-ac8e051a2a49",
              "parentUUID": "af530a6d-5da1-4668-aaa8-7b0afe4fd852",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[1,2,3] should return true",
              "fullTitle": "isArrayLike unit tests [1,2,3] should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isArrayLike([1,2,3]);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "ea034468-8eff-4172-918f-ec061f663207",
              "parentUUID": "af530a6d-5da1-4668-aaa8-7b0afe4fd852",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null should return false",
              "fullTitle": "isArrayLike unit tests null should return false",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isArrayLike(null);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "8481e501-934f-4078-bc02-11e0a8b86686",
              "parentUUID": "af530a6d-5da1-4668-aaa8-7b0afe4fd852",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "string should return true",
              "fullTitle": "isArrayLike unit tests string should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isArrayLike(\"word\");\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "e04ad920-0c58-4315-b1b9-698e3661f82e",
              "parentUUID": "af530a6d-5da1-4668-aaa8-7b0afe4fd852",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "int should return false",
              "fullTitle": "isArrayLike unit tests int should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isArrayLike(1);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "6f9cb032-0b00-4138-a315-fefae2b00eb1",
              "parentUUID": "af530a6d-5da1-4668-aaa8-7b0afe4fd852",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "function should return false",
              "fullTitle": "isArrayLike unit tests function should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isArrayLike(Function);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "9cbac000-ce14-4db0-8711-ba2cbf9c273c",
              "parentUUID": "af530a6d-5da1-4668-aaa8-7b0afe4fd852",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37344833-086f-4532-a0ea-ac8e051a2a49",
            "ea034468-8eff-4172-918f-ec061f663207",
            "8481e501-934f-4078-bc02-11e0a8b86686",
            "e04ad920-0c58-4315-b1b9-698e3661f82e",
            "6f9cb032-0b00-4138-a315-fefae2b00eb1",
            "9cbac000-ce14-4db0-8711-ba2cbf9c273c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "376d46e9-e16d-49c2-8a9a-27eb0cf257c5",
          "title": "isEmpty unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/isEmpty.test.js",
          "file": "/test/isEmpty.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "null should return true",
              "fullTitle": "isEmpty unit tests null should return true",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty(null);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "a2378527-21c0-409e-8775-788a810e3ed5",
              "parentUUID": "376d46e9-e16d-49c2-8a9a-27eb0cf257c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "true should return true",
              "fullTitle": "isEmpty unit tests true should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty(true);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "371d5d30-d7e3-4c85-be75-49a2f510b6e4",
              "parentUUID": "376d46e9-e16d-49c2-8a9a-27eb0cf257c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "1 should return true",
              "fullTitle": "isEmpty unit tests 1 should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty(1);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "09a21638-72cb-4dc2-ba1a-4199f8cd1d82",
              "parentUUID": "376d46e9-e16d-49c2-8a9a-27eb0cf257c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "list with items should return false",
              "fullTitle": "isEmpty unit tests list with items should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty([1,2]);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "6d19107b-d4b4-4b7d-8af4-025e5524f4db",
              "parentUUID": "376d46e9-e16d-49c2-8a9a-27eb0cf257c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "empty list should return true",
              "fullTitle": "isEmpty unit tests empty list should return true",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty([]);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "e1809261-1780-4995-8abb-b285ec770cae",
              "parentUUID": "376d46e9-e16d-49c2-8a9a-27eb0cf257c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "empty string should return true",
              "fullTitle": "isEmpty unit tests empty string should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty('');\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "19478001-4282-43a2-ac25-4608a991c8aa",
              "parentUUID": "376d46e9-e16d-49c2-8a9a-27eb0cf257c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "string should return false",
              "fullTitle": "isEmpty unit tests string should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty('abc');\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "d982bfe4-66d2-4514-8e4a-9bcd9bdd1da4",
              "parentUUID": "376d46e9-e16d-49c2-8a9a-27eb0cf257c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2378527-21c0-409e-8775-788a810e3ed5",
            "371d5d30-d7e3-4c85-be75-49a2f510b6e4",
            "09a21638-72cb-4dc2-ba1a-4199f8cd1d82",
            "6d19107b-d4b4-4b7d-8af4-025e5524f4db",
            "e1809261-1780-4995-8abb-b285ec770cae",
            "19478001-4282-43a2-ac25-4608a991c8aa",
            "d982bfe4-66d2-4514-8e4a-9bcd9bdd1da4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f974e78a-6ed7-4002-bdba-6d910404100a",
          "title": "isLength unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/isLength.test.js",
          "file": "/test/isLength.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "3 should return true",
              "fullTitle": "isLength unit tests 3 should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isLength(3);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "31d1b3ae-7c4e-4838-a2c0-804f586e5df9",
              "parentUUID": "f974e78a-6ed7-4002-bdba-6d910404100a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Number.MIN_VALUE should return false",
              "fullTitle": "isLength unit tests Number.MIN_VALUE should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isLength(Number.MIN_VALUE);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "7c886392-7b91-4eb4-99db-15f86f37e001",
              "parentUUID": "f974e78a-6ed7-4002-bdba-6d910404100a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Infinity should return false",
              "fullTitle": "isLength unit tests Infinity should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isLength(Infinity);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "27aee2b4-e2d6-4e9d-992b-9e9d5b985409",
              "parentUUID": "f974e78a-6ed7-4002-bdba-6d910404100a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "string 1 should return false",
              "fullTitle": "isLength unit tests string 1 should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isLength('1');\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "65b71e7b-398c-49d4-b355-88eb86b0516a",
              "parentUUID": "f974e78a-6ed7-4002-bdba-6d910404100a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "-1 should return false",
              "fullTitle": "isLength unit tests -1 should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isLength(-1);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "0701090b-8239-428b-84e8-3204d85f84d5",
              "parentUUID": "f974e78a-6ed7-4002-bdba-6d910404100a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "-100000000000000 should return false",
              "fullTitle": "isLength unit tests -100000000000000 should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isLength(-100000000000000);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "f8c96239-51d4-4744-9690-edb854ba072a",
              "parentUUID": "f974e78a-6ed7-4002-bdba-6d910404100a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "1.5 should return false",
              "fullTitle": "isLength unit tests 1.5 should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isLength(1.5);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "2d555c2c-6a70-4247-b1f4-cc89db49af79",
              "parentUUID": "f974e78a-6ed7-4002-bdba-6d910404100a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31d1b3ae-7c4e-4838-a2c0-804f586e5df9",
            "7c886392-7b91-4eb4-99db-15f86f37e001",
            "27aee2b4-e2d6-4e9d-992b-9e9d5b985409",
            "65b71e7b-398c-49d4-b355-88eb86b0516a",
            "0701090b-8239-428b-84e8-3204d85f84d5",
            "f8c96239-51d4-4744-9690-edb854ba072a",
            "2d555c2c-6a70-4247-b1f4-cc89db49af79"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "12b4fd32-5ba0-4571-846e-48b5e33ea646",
          "title": "isObject unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/isObject.test.js",
          "file": "/test/isObject.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "function should return true",
              "fullTitle": "isObject unit tests function should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isObject(Function);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "4273be72-e77f-40af-8f2f-1c8c9159179f",
              "parentUUID": "12b4fd32-5ba0-4571-846e-48b5e33ea646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "list should return true",
              "fullTitle": "isObject unit tests list should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isObject([1,2,3]);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "9cbe24d6-a213-4015-8b7d-0896f8742116",
              "parentUUID": "12b4fd32-5ba0-4571-846e-48b5e33ea646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null should return false",
              "fullTitle": "isObject unit tests null should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isObject(null);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "66d00a9a-9ecc-4d36-a443-77195b291512",
              "parentUUID": "12b4fd32-5ba0-4571-846e-48b5e33ea646",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4273be72-e77f-40af-8f2f-1c8c9159179f",
            "9cbe24d6-a213-4015-8b7d-0896f8742116",
            "66d00a9a-9ecc-4d36-a443-77195b291512"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "506b0764-08ec-41d8-9e7f-5caded7d1373",
          "title": "isSymbol unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/isSymbol.test.js",
          "file": "/test/isSymbol.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Symbol.iterator should return true",
              "fullTitle": "isSymbol unit tests Symbol.iterator should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isSymbol(Symbol.iterator);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "5db53f8a-939f-42af-ae0f-c9c4dd49d173",
              "parentUUID": "506b0764-08ec-41d8-9e7f-5caded7d1373",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "abc should return false",
              "fullTitle": "isSymbol unit tests abc should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isSymbol('abc');\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "26d9b1d4-c4df-4bfd-bb84-32cbfb5954e8",
              "parentUUID": "506b0764-08ec-41d8-9e7f-5caded7d1373",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null should return false",
              "fullTitle": "isSymbol unit tests null should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isSymbol(null);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "f52a8071-05a2-4087-a1ad-a48bf75d6b3f",
              "parentUUID": "506b0764-08ec-41d8-9e7f-5caded7d1373",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "1 should return false",
              "fullTitle": "isSymbol unit tests 1 should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isSymbol(1);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "f9107b95-9092-4450-aab8-1c4ffd16e9bc",
              "parentUUID": "506b0764-08ec-41d8-9e7f-5caded7d1373",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5db53f8a-939f-42af-ae0f-c9c4dd49d173",
            "26d9b1d4-c4df-4bfd-bb84-32cbfb5954e8",
            "f52a8071-05a2-4087-a1ad-a48bf75d6b3f",
            "f9107b95-9092-4450-aab8-1c4ffd16e9bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cb2cbe1a-5cda-401b-ac29-df0a3ba6d56b",
          "title": "reduce unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/reduce.test.js",
          "file": "/test/reduce.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[1, 2], (sum, n) => sum + n, 0 should return 3",
              "fullTitle": "reduce unit tests [1, 2], (sum, n) => sum + n, 0 should return 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = reduce([1, 2], (sum, n) => sum + n, 0);\nexpect(result).to.equal(3);",
              "err": {},
              "uuid": "6745a6a6-2735-4a78-a7a0-d1a76b8bd77c",
              "parentUUID": "cb2cbe1a-5cda-401b-ac29-df0a3ba6d56b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[], (sum, n) => sum + n, 0 should return 0",
              "fullTitle": "reduce unit tests [], (sum, n) => sum + n, 0 should return 0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = reduce([], (sum, n) => sum + n, 0);\nexpect(result).to.equal(0);",
              "err": {},
              "uuid": "dc9b262a-26a1-43f1-8b4b-a554ac03b02f",
              "parentUUID": "cb2cbe1a-5cda-401b-ac29-df0a3ba6d56b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[\"\", \"b\", \"c\"], (v1, v2) => v1 + v2, \"a\" should return \"abc\"",
              "fullTitle": "reduce unit tests [\"\", \"b\", \"c\"], (v1, v2) => v1 + v2, \"a\" should return \"abc\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = reduce([\"\", \"b\", \"c\"], (v1, v2) => v1 + v2, \"a\");\nexpect(result).to.equal(\"abc\");",
              "err": {},
              "uuid": "9e3c0a40-0293-4422-a858-94522c755f58",
              "parentUUID": "cb2cbe1a-5cda-401b-ac29-df0a3ba6d56b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null, (v1, v2) => v1 + v2, \"a\" should return \"a\"",
              "fullTitle": "reduce unit tests null, (v1, v2) => v1 + v2, \"a\" should return \"a\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = reduce(null, (v1, v2) => v1 + v2, \"a\");\nexpect(result).to.equal(\"a\");",
              "err": {},
              "uuid": "8c1c64fd-d36b-4d81-af6d-3d17aae35cbe",
              "parentUUID": "cb2cbe1a-5cda-401b-ac29-df0a3ba6d56b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[\"a\", \"b\", \"c\"], (v1, v2) => v1 + v2, should return \"abc\"",
              "fullTitle": "reduce unit tests [\"a\", \"b\", \"c\"], (v1, v2) => v1 + v2, should return \"abc\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = reduce([\"a\", \"b\", \"c\"], (v1, v2) => v1 + v2);\nexpect(result).to.equal(\"abc\");",
              "err": {},
              "uuid": "3a514458-7078-41ab-be9b-ca2311b848c9",
              "parentUUID": "cb2cbe1a-5cda-401b-ac29-df0a3ba6d56b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6745a6a6-2735-4a78-a7a0-d1a76b8bd77c",
            "dc9b262a-26a1-43f1-8b4b-a554ac03b02f",
            "9e3c0a40-0293-4422-a858-94522c755f58",
            "8c1c64fd-d36b-4d81-af6d-3d17aae35cbe",
            "3a514458-7078-41ab-be9b-ca2311b848c9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4c4ba100-f52b-40b6-bc26-3e77945dc685",
          "title": "upperFirst unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/upperFirst.test.js",
          "file": "/test/upperFirst.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "abc should return Abc",
              "fullTitle": "upperFirst unit tests abc should return Abc",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = upperFirst('abc');\nexpect(result).to.equal('Abc');",
              "err": {},
              "uuid": "e8f69dbd-6dd2-4a59-a562-5c36360273db",
              "parentUUID": "4c4ba100-f52b-40b6-bc26-3e77945dc685",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "empty string should return empty string",
              "fullTitle": "upperFirst unit tests empty string should return empty string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = upperFirst('');\nexpect(result).to.equal('');",
              "err": {},
              "uuid": "77feb505-1394-4d40-8843-ea55b111ae98",
              "parentUUID": "4c4ba100-f52b-40b6-bc26-3e77945dc685",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "space at the start should not affect output",
              "fullTitle": "upperFirst unit tests space at the start should not affect output",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = upperFirst(' abc');\nexpect(result).to.equal(' abc');",
              "err": {},
              "uuid": "d9846fcc-3d11-4fc2-af01-c8a75df95307",
              "parentUUID": "4c4ba100-f52b-40b6-bc26-3e77945dc685",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ABC should return ABC",
              "fullTitle": "upperFirst unit tests ABC should return ABC",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = upperFirst('ABC');\nexpect(result).to.equal('ABC');",
              "err": {},
              "uuid": "71ef6db1-01c6-4015-9cd1-7cac04e2a49b",
              "parentUUID": "4c4ba100-f52b-40b6-bc26-3e77945dc685",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e8f69dbd-6dd2-4a59-a562-5c36360273db",
            "77feb505-1394-4d40-8843-ea55b111ae98",
            "d9846fcc-3d11-4fc2-af01-c8a75df95307",
            "71ef6db1-01c6-4015-9cd1-7cac04e2a49b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}