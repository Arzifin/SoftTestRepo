{
  "stats": {
    "suites": 10,
    "tests": 31,
    "passes": 20,
    "pending": 0,
    "failures": 11,
    "start": "2021-12-04T19:57:24.032Z",
    "end": "2021-12-04T19:57:24.064Z",
    "duration": 32,
    "testsRegistered": 31,
    "passPercent": 64.51612903225806,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "caff55cf-9d2b-4912-92d0-fa0cbcec41d1",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9391ba12-13a4-458c-af3e-abc4f98b6701",
          "title": "camelCase unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/camelCaseTest.js",
          "file": "/test/camelCaseTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Foo Bar should return fooBar",
              "fullTitle": "camelCase unit tests Foo Bar should return fooBar",
              "timedOut": false,
              "duration": 3,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase('Foo Bar');\nexpect(result).to.equal('fooBar');",
              "err": {
                "message": "AssertionError: expected ' fooBar' to equal 'fooBar'",
                "estack": "AssertionError: expected ' fooBar' to equal 'fooBar'\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/camelCaseTest.js:9:27)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": "-  fooBar\n+ fooBar\n"
              },
              "uuid": "7d9e4bce-8470-4a14-bbd8-ccc4aefc8a89",
              "parentUUID": "9391ba12-13a4-458c-af3e-abc4f98b6701",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "--foo-bar-- should return fooBar",
              "fullTitle": "camelCase unit tests --foo-bar-- should return fooBar",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase('--foo-bar--');\nexpect(result).to.equal('fooBar');",
              "err": {
                "message": "AssertionError: expected ' fooBar' to equal 'fooBar'",
                "estack": "AssertionError: expected ' fooBar' to equal 'fooBar'\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/camelCaseTest.js:14:27)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": "-  fooBar\n+ fooBar\n"
              },
              "uuid": "bd70bc3c-950c-4665-8068-09fcfa190438",
              "parentUUID": "9391ba12-13a4-458c-af3e-abc4f98b6701",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "__FOO_BAR__ should return fooBar",
              "fullTitle": "camelCase unit tests __FOO_BAR__ should return fooBar",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase('__FOO_BAR__');\nexpect(result).to.equal('fooBar');",
              "err": {
                "message": "AssertionError: expected ' fooBar' to equal 'fooBar'",
                "estack": "AssertionError: expected ' fooBar' to equal 'fooBar'\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/camelCaseTest.js:19:27)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": "-  fooBar\n+ fooBar\n"
              },
              "uuid": "d6d2d9fd-1ae6-4699-abe1-3d1e4c94959e",
              "parentUUID": "9391ba12-13a4-458c-af3e-abc4f98b6701",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "a should return a",
              "fullTitle": "camelCase unit tests a should return a",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase('a');\nexpect(result).to.equal('a');",
              "err": {
                "message": "AssertionError: expected ' a' to equal 'a'",
                "estack": "AssertionError: expected ' a' to equal 'a'\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/camelCaseTest.js:24:27)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": "-  a\n+ a\n"
              },
              "uuid": "ff5259a8-0955-4fe4-b366-f37213a5bd24",
              "parentUUID": "9391ba12-13a4-458c-af3e-abc4f98b6701",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "a.b.c should return aBC",
              "fullTitle": "camelCase unit tests a.b.c should return aBC",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase('a.b.c');\nexpect(result).to.equal('aBC');",
              "err": {
                "message": "AssertionError: expected ' aBC' to equal 'aBC'",
                "estack": "AssertionError: expected ' aBC' to equal 'aBC'\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/camelCaseTest.js:29:27)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": "-  aBC\n+ aBC\n"
              },
              "uuid": "b9027c4d-0dab-445e-bf8c-fdf415130f4f",
              "parentUUID": "9391ba12-13a4-458c-af3e-abc4f98b6701",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "abc abc abc should return abcAbcAbc",
              "fullTitle": "camelCase unit tests abc abc abc should return abcAbcAbc",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const result = camelCase('abc abc abc abc');\nexpect(result).to.equal('abcAbcAbcAbc');",
              "err": {
                "message": "AssertionError: expected ' abcAbcAbcAbc' to equal 'abcAbcAbcAbc'",
                "estack": "AssertionError: expected ' abcAbcAbcAbc' to equal 'abcAbcAbcAbc'\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/camelCaseTest.js:34:27)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": "-  abcAbcAbcAbc\n+ abcAbcAbcAbc\n"
              },
              "uuid": "ee40c052-36b7-41a8-bc78-ca862965902d",
              "parentUUID": "9391ba12-13a4-458c-af3e-abc4f98b6701",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7d9e4bce-8470-4a14-bbd8-ccc4aefc8a89",
            "bd70bc3c-950c-4665-8068-09fcfa190438",
            "d6d2d9fd-1ae6-4699-abe1-3d1e4c94959e",
            "ff5259a8-0955-4fe4-b366-f37213a5bd24",
            "b9027c4d-0dab-445e-bf8c-fdf415130f4f",
            "ee40c052-36b7-41a8-bc78-ca862965902d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "23742d9f-686f-42c8-be17-e965a1a2a699",
          "title": "Drop",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/defaultTo.test.js",
          "file": "/test/defaultTo.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should throw exception, when passing non-integer as 2nd parameter",
              "fullTitle": "Drop should throw exception, when passing non-integer as 2nd parameter",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(() => drop(55, \"Hello\")).to.throw(TypeError);",
              "err": {
                "message": "AssertionError: expected [Function] to throw TypeError",
                "estack": "AssertionError: expected [Function] to throw TypeError\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/defaultTo.test.js:15:49)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": null
              },
              "uuid": "9574b62a-c198-4ba5-8feb-95f62cbb7f04",
              "parentUUID": "23742d9f-686f-42c8-be17-e965a1a2a699",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9574b62a-c198-4ba5-8feb-95f62cbb7f04"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0cad05e3-94c0-4fc5-81eb-e34a2893bc88",
          "title": "Drop",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/drop.test.js",
          "file": "/test/drop.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should throw exception, when passing non-integer as 2nd parameter",
              "fullTitle": "Drop should throw exception, when passing non-integer as 2nd parameter",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(() => drop(55, \"Hello\")).to.throw(TypeError);",
              "err": {
                "message": "AssertionError: expected [Function] to throw TypeError",
                "estack": "AssertionError: expected [Function] to throw TypeError\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/drop.test.js:15:49)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": null
              },
              "uuid": "d42f84a7-23fe-4d78-8ffe-ae81636dbb2f",
              "parentUUID": "0cad05e3-94c0-4fc5-81eb-e34a2893bc88",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d42f84a7-23fe-4d78-8ffe-ae81636dbb2f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9c6db0df-8c88-4a74-9f02-13ab44328cb2",
          "title": "isArrayLike unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/isArrayLikeTest.js",
          "file": "/test/isArrayLikeTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "empty list should return true",
              "fullTitle": "isArrayLike unit tests empty list should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isArrayLike([]);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "a37c469b-8647-4362-b73f-730f2fe586fd",
              "parentUUID": "9c6db0df-8c88-4a74-9f02-13ab44328cb2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[1,2,3] should return true",
              "fullTitle": "isArrayLike unit tests [1,2,3] should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isArrayLike([1,2,3]);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "1507ab5b-1539-403e-810a-84fc1fd651a8",
              "parentUUID": "9c6db0df-8c88-4a74-9f02-13ab44328cb2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null should return false",
              "fullTitle": "isArrayLike unit tests null should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isArrayLike(null);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "c6a0b88c-c450-4d18-b741-ea4044c191d7",
              "parentUUID": "9c6db0df-8c88-4a74-9f02-13ab44328cb2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "string should return true",
              "fullTitle": "isArrayLike unit tests string should return true",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isArrayLike(\"word\");\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "c4c23075-1918-4d40-92ad-a10b9fe20b27",
              "parentUUID": "9c6db0df-8c88-4a74-9f02-13ab44328cb2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "int should return false",
              "fullTitle": "isArrayLike unit tests int should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isArrayLike(1);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "5c4f9329-9a46-4fdc-a2e9-6bfbd3b97b38",
              "parentUUID": "9c6db0df-8c88-4a74-9f02-13ab44328cb2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "function should return false",
              "fullTitle": "isArrayLike unit tests function should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isArrayLike(Function);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "e3bc9810-4682-4e9c-b588-2087d35e8b6b",
              "parentUUID": "9c6db0df-8c88-4a74-9f02-13ab44328cb2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a37c469b-8647-4362-b73f-730f2fe586fd",
            "1507ab5b-1539-403e-810a-84fc1fd651a8",
            "c6a0b88c-c450-4d18-b741-ea4044c191d7",
            "c4c23075-1918-4d40-92ad-a10b9fe20b27",
            "5c4f9329-9a46-4fdc-a2e9-6bfbd3b97b38",
            "e3bc9810-4682-4e9c-b588-2087d35e8b6b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b282d069-410c-414e-adc3-e634990f3b37",
          "title": "isEmpty unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/isEmptyTest.js",
          "file": "/test/isEmptyTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "null should return true",
              "fullTitle": "isEmpty unit tests null should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty(null);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "116f98f4-e99a-4039-bb4c-598a12b9fdf9",
              "parentUUID": "b282d069-410c-414e-adc3-e634990f3b37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "true should return true",
              "fullTitle": "isEmpty unit tests true should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty(true);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "dc37e119-e9a4-46c9-b58b-fc40fa5d1be1",
              "parentUUID": "b282d069-410c-414e-adc3-e634990f3b37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "1 should return true",
              "fullTitle": "isEmpty unit tests 1 should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty(1);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "dfa8fb57-0704-4d95-95d3-1dda6d934837",
              "parentUUID": "b282d069-410c-414e-adc3-e634990f3b37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "list with items should return false",
              "fullTitle": "isEmpty unit tests list with items should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty([1,2]);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "90b2878b-b1fb-4f2b-84aa-ae91631b4b01",
              "parentUUID": "b282d069-410c-414e-adc3-e634990f3b37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "empty list should return true",
              "fullTitle": "isEmpty unit tests empty list should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty([]);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "fc3b9f8c-887c-45b7-ae45-fe6823d9bc95",
              "parentUUID": "b282d069-410c-414e-adc3-e634990f3b37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "empty string should return true",
              "fullTitle": "isEmpty unit tests empty string should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty('');\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "b01c8ed2-cd94-411e-b49b-f5cab70a92d8",
              "parentUUID": "b282d069-410c-414e-adc3-e634990f3b37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "string should return false",
              "fullTitle": "isEmpty unit tests string should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isEmpty('abc');\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "340e6a3e-8154-49bf-86f3-460554f487ca",
              "parentUUID": "b282d069-410c-414e-adc3-e634990f3b37",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "116f98f4-e99a-4039-bb4c-598a12b9fdf9",
            "dc37e119-e9a4-46c9-b58b-fc40fa5d1be1",
            "dfa8fb57-0704-4d95-95d3-1dda6d934837",
            "90b2878b-b1fb-4f2b-84aa-ae91631b4b01",
            "fc3b9f8c-887c-45b7-ae45-fe6823d9bc95",
            "b01c8ed2-cd94-411e-b49b-f5cab70a92d8",
            "340e6a3e-8154-49bf-86f3-460554f487ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f7a00a93-0ebc-43b3-9cd3-8299070a2c6f",
          "title": "Drop",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/isLength.test.js",
          "file": "/test/isLength.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should throw exception, when passing non-integer as 2nd parameter",
              "fullTitle": "Drop should throw exception, when passing non-integer as 2nd parameter",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(() => drop(55, \"Hello\")).to.throw(TypeError);",
              "err": {
                "message": "AssertionError: expected [Function] to throw TypeError",
                "estack": "AssertionError: expected [Function] to throw TypeError\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/isLength.test.js:15:49)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": null
              },
              "uuid": "6a5ed41b-8d0d-46a6-99ec-e430690e6fc3",
              "parentUUID": "f7a00a93-0ebc-43b3-9cd3-8299070a2c6f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6a5ed41b-8d0d-46a6-99ec-e430690e6fc3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e3e0cf3b-4070-41a3-a25f-1747273b1ecb",
          "title": "isObject unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/isObjectTest.js",
          "file": "/test/isObjectTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "function should return true",
              "fullTitle": "isObject unit tests function should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isObject(Function);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "5ae9644d-7d78-4aa8-b601-e99a505ef650",
              "parentUUID": "e3e0cf3b-4070-41a3-a25f-1747273b1ecb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "list should return true",
              "fullTitle": "isObject unit tests list should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isObject([1,2,3]);\nexpect(result).to.equal(true);",
              "err": {},
              "uuid": "3b9588f4-ca37-41a3-9290-cfc575fffc3a",
              "parentUUID": "e3e0cf3b-4070-41a3-a25f-1747273b1ecb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "null should return false",
              "fullTitle": "isObject unit tests null should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = isObject(null);\nexpect(result).to.equal(false);",
              "err": {},
              "uuid": "1f8ac832-4198-465c-b9e4-7d56297eef99",
              "parentUUID": "e3e0cf3b-4070-41a3-a25f-1747273b1ecb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ae9644d-7d78-4aa8-b601-e99a505ef650",
            "3b9588f4-ca37-41a3-9290-cfc575fffc3a",
            "1f8ac832-4198-465c-b9e4-7d56297eef99"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "74fffa1f-2d65-4a4d-8651-b093dfbfe77e",
          "title": "Drop",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/isSymbol.test.js",
          "file": "/test/isSymbol.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should throw exception, when passing non-integer as 2nd parameter",
              "fullTitle": "Drop should throw exception, when passing non-integer as 2nd parameter",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(() => drop(55, \"Hello\")).to.throw(TypeError);",
              "err": {
                "message": "AssertionError: expected [Function] to throw TypeError",
                "estack": "AssertionError: expected [Function] to throw TypeError\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/isSymbol.test.js:15:49)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": null
              },
              "uuid": "0a93fd2e-0e06-4732-9482-60a070ff0c6c",
              "parentUUID": "74fffa1f-2d65-4a4d-8651-b093dfbfe77e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0a93fd2e-0e06-4732-9482-60a070ff0c6c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7a248453-84d9-441d-be76-19b03e00b1d5",
          "title": "Drop",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/reduce.test.js",
          "file": "/test/reduce.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should throw exception, when passing non-integer as 2nd parameter",
              "fullTitle": "Drop should throw exception, when passing non-integer as 2nd parameter",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(() => drop(55, \"Hello\")).to.throw(TypeError);",
              "err": {
                "message": "AssertionError: expected [Function] to throw TypeError",
                "estack": "AssertionError: expected [Function] to throw TypeError\n    at Context.<anonymous> (file:///Users/matiaslappalainen/SoftTestRepo/test/reduce.test.js:15:49)\n    at processImmediate (node:internal/timers:464:21)",
                "diff": null
              },
              "uuid": "87877970-75aa-4dc7-9909-3062b4b0373b",
              "parentUUID": "7a248453-84d9-441d-be76-19b03e00b1d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "87877970-75aa-4dc7-9909-3062b4b0373b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e3b69273-81ed-422f-8e71-6becb1edd4f8",
          "title": "upperFirst unit tests",
          "fullFile": "/Users/matiaslappalainen/SoftTestRepo/test/upperFirstTest.js",
          "file": "/test/upperFirstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "abc should return Abc",
              "fullTitle": "upperFirst unit tests abc should return Abc",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = upperFirst('abc');\nexpect(result).to.equal('Abc');",
              "err": {},
              "uuid": "4e3ea9d9-4f27-4914-8528-ca5b0802fc5e",
              "parentUUID": "e3b69273-81ed-422f-8e71-6becb1edd4f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "empty string should return empty string",
              "fullTitle": "upperFirst unit tests empty string should return empty string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = upperFirst('');\nexpect(result).to.equal('');",
              "err": {},
              "uuid": "af6b1ced-bf72-438d-a98c-2a93ae776792",
              "parentUUID": "e3b69273-81ed-422f-8e71-6becb1edd4f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "space at the start should not affect output",
              "fullTitle": "upperFirst unit tests space at the start should not affect output",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = upperFirst(' abc');\nexpect(result).to.equal(' abc');",
              "err": {},
              "uuid": "ad041c8e-01f4-4988-849b-17bb011982b5",
              "parentUUID": "e3b69273-81ed-422f-8e71-6becb1edd4f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ABC should return ABC",
              "fullTitle": "upperFirst unit tests ABC should return ABC",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const result = upperFirst('ABC');\nexpect(result).to.equal('ABC');",
              "err": {},
              "uuid": "d91b3826-5df1-49b0-9c16-8c0954bd3823",
              "parentUUID": "e3b69273-81ed-422f-8e71-6becb1edd4f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e3ea9d9-4f27-4914-8528-ca5b0802fc5e",
            "af6b1ced-bf72-438d-a98c-2a93ae776792",
            "ad041c8e-01f4-4988-849b-17bb011982b5",
            "d91b3826-5df1-49b0-9c16-8c0954bd3823"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}